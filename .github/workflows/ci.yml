# name: CI
# on:
#   push:
#     branches: [master]
#   pull_request:
#     branches: [master]

# jobs:
#   verify_files:
#     name: Verify Files
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v2
#     - uses: actions/setup-node@v1
#     - name: Install Packages
#       run: npm install
#     - name: Lint Files
#       run: node Makefile lint
#     - name: Check Rule Files
#       run: node Makefile checkRuleFiles
#     - name: Check Licenses
#       run: node Makefile checkLicenses

#   test_on_node:
#     name: Test
#     strategy:
#       matrix:
#         os: [ubuntu-latest]
#         node: [15.x, 14.x, 13.x, 12.x, 10.x, "10.12.0"]
#         include:
#         - os: windows-latest
#           node: "12.x"
#         - os: macOS-latest
#           node: "12.x"
#     runs-on: ${{ matrix.os }}
#     steps:
#     - uses: actions/checkout@v2
#     - uses: actions/setup-node@v1
#       with:
#         node-version: ${{ matrix.node }}
#     - name: Install Packages
#       run: npm install
#       if: ${{ !startswith(matrix.node, '15') }}
#     - name: Install Packages
#       run: npm install --legacy-peer-deps
#       if: ${{ startswith(matrix.node, '15') }}
#     - name: Test
#       run: node Makefile mocha
#     - name: Fuzz Test
#       run: node Makefile fuzz

#   test_on_browser:
#     name: Browser Test
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v2
#     - uses: actions/setup-node@v1
#     - name: Install Packages
#       run: npm install
#     - name: Test
#       run: node Makefile karma
#     - name: Fuzz Test
#       run: node Makefile fuzz

name: Test

on:
  pull_request:
    branches:
      - master

jobs:
  test:
    name: Jest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: yarn
      - run: yarn test

  lint:
    name: Eslint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: yarn
      - run: yarn lint

#   notify:
#       Name: Slack
#       needs: [test, lint] # We only check after the others jobs have run
#       if: always() # Always runs even if one of the builds fails
#       runs-on: ubuntu-latest
#       steps:
#        - uses: iRoachie/slack-github-actions@v2.3.0
#          env:
#            SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
#            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
